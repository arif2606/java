//prct 2 a linear search

import java.util.Scanner;  // Import the Scanner class to read user input

public class BinarySearch {

    // Binary Search method
    public static int binarySearch(int[] array, int target) {
        int left = 0;  // Initialize the left boundary
        int right = array.length - 1;  // Initialize the right boundary

        while (left <= right) {  // Loop while left boundary is less than or equal to right boundary
            int mid = left + (right - left) / 2;  // Calculate the middle index to avoid overflow

            if (array[mid] == target) {
                return mid;  // Return the index if the target is found
            }

            if (array[mid] < target) {
                left = mid + 1;  // If target is greater, ignore the left half
            } else {
                right = mid - 1;  // If target is smaller, ignore the right half
            }
        }

        return -1;  // Return -1 if the element is not found
    }

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);  // Create Scanner object to read input

        // Ask the user to enter the number of elements in the array
        System.out.print("Enter the number of elements in the array: ");
        int size = scanner.nextInt();  // Read the size of the array

        if (size <= 0) {
            System.out.println("Array size must be a positive integer.");
            return; // Exit if the size is non-positive
        }

        int[] array = new int[size];  // Create an array of the given size

        // Ask the user to input the sorted integers
        System.out.println("Enter " + size + " sorted integers:");
        for (int i = 0; i < size; i++) {
            array[i] = scanner.nextInt();  // Read each integer into the array
        }

        // Ask the user to input the target value to search
        System.out.print("Enter the element to search: ");
        int target = scanner.nextInt();  // Read the target element

        // Perform binary search and get the result
        int result = binarySearch(array, target);

        // Output the result
        if (result == -1) {
            System.out.println("Element not found");
        } else {
            System.out.println("Element found at index " + result);  // Print the index of the target
        }

        scanner.close();  // Close the scanner
    }
}


// prct 2 b


import java.util.Scanner;  // Import the Scanner class to read user input

public class BinarySearch {

    // Binary Search method
    public static int binarySearch(int[] array, int target) {
        int left = 0;  // Initialize the left boundary
        int right = array.length - 1;  // Initialize the right boundary

        while (left <= right) {  // Loop while left boundary is less than or equal to right boundary
            int mid = left + (right - left) / 2;  // Calculate the middle index to avoid overflow

            if (array[mid] == target) {
                return mid;  // Return the index if the target is found
            }

            if (array[mid] < target) {
                left = mid + 1;  // If target is greater, ignore the left half
            } else {
                right = mid - 1;  // If target is smaller, ignore the right half
            }
        }

        return -1;  // Return -1 if the element is not found
    }

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);  // Create Scanner object to read input

        // Ask the user to enter the number of elements in the array
        System.out.print("Enter the number of elements in the array: ");
        int size = scanner.nextInt();  // Read the size of the array

        if (size <= 0) {
            System.out.println("Array size must be a positive integer.");
            return; // Exit if the size is non-positive
        }

        int[] array = new int[size];  // Create an array of the given size

        // Ask the user to input the sorted integers
        System.out.println("Enter " + size + " sorted integers:");
        for (int i = 0; i < size; i++) {
            array[i] = scanner.nextInt();  // Read each integer into the array
        }

        // Ask the user to input the target value to search
        System.out.print("Enter the element to search: ");
        int target = scanner.nextInt();  // Read the target element

        // Perform binary search and get the result
        int result = binarySearch(array, target);

        // Output the result
        if (result == -1) {
            System.out.println("Element not found");
        } else {
            System.out.println("Element found at index " + result);  // Print the index of the target
        }

        scanner.close();  // Close the scanner
    }
}
